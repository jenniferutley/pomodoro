{"version":3,"sources":["media/piece-of-cake.mp3","media/goes-without-saying.mp3","components/Timer.js","components/Break.js","components/LongBreak.js","components/Focus.js","components/Settings.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Timer","handleStartPause","currentSessionType","timeLeft","setCurrentSessionType","isStarted","focusLength","setFocusLength","setTimeLeft","intervalID","setIntervalID","setBreakLength","breakLength","longBreakLength","setLongBreakLength","focusNumber","setFocusNumber","formattedTimeLeft","focusBeforeLong","restartButton","name","playButton","pauseButton","skipButton","className","onClick","clearInterval","title","Break","breakLengthInMinutes","moment","duration","asMinutes","htmlFor","type","id","min","max","value","onChange","e","inputBreakLengthInSeconds","target","asSeconds","LongBreak","longBreakLengthInMinutes","inputLongBreakLengthInSeconds","Focus","focusLengthInMinutes","inputFocusLengthInSeconds","Settings","autoStart","setAutoStart","setFocusBeforeLong","timerInTitle","setTimerInTitle","showSettings","setShowSettings","closeButton","document","body","style","overflow","getElementById","classList","add","setTimeout","defaultChecked","About","showAbout","setShowAbout","remove","href","momentDurationFormatSetup","App","endFocusAudio","useRef","endBreakAudio","useState","format","trim","aboutButton","settingsButton","useEffect","current","volume","play","newIntervalID","setInterval","prevTimeLeft","newTimeLeft","ref","src","endFocus","endBreak","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.64c555ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/piece-of-cake.7ad935d5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/goes-without-saying.8d94a74c.mp3\";","import React from 'react'\r\n\r\nfunction Timer({ handleStartPause, timeLeft, currentSessionType, setCurrentSessionType, isStarted, focusLength, setFocusLength, setTimeLeft, intervalID, setIntervalID, setBreakLength, breakLength, longBreakLength, setLongBreakLength, focusNumber, setFocusNumber, formattedTimeLeft, focusBeforeLong }) {\r\n\r\n  const restartButton = <ion-icon name=\"play-skip-back-sharp\"></ion-icon>\r\n  const playButton = <ion-icon name=\"play-sharp\"></ion-icon>\r\n  const pauseButton = <ion-icon name=\"pause-sharp\"></ion-icon>\r\n  const skipButton = <ion-icon name=\"play-skip-forward-sharp\"></ion-icon>\r\n\r\n  const handleRestart = () => {\r\n    clearInterval(intervalID)\r\n    setIntervalID(null)\r\n    if (currentSessionType === \"Focus\") {\r\n      setFocusLength(focusLength)\r\n      setTimeLeft(focusLength)\r\n    }\r\n    else if (currentSessionType === \"Break\") {\r\n      setBreakLength(breakLength)\r\n      setTimeLeft(breakLength)\r\n    }\r\n    else if (currentSessionType === \"Long Break\") {\r\n      setLongBreakLength(longBreakLength)\r\n      setTimeLeft(longBreakLength)\r\n    }\r\n  }\r\n\r\n  const handleSkip = () => {\r\n    clearInterval(intervalID)\r\n    setIntervalID(null)\r\n    if (currentSessionType === \"Focus\" && focusNumber < (focusBeforeLong - 1)) {\r\n      setCurrentSessionType(\"Break\")\r\n      setFocusNumber(focusNumber + 1)\r\n    }\r\n    if (currentSessionType === \"Focus\" && focusNumber === (focusBeforeLong - 1)) {\r\n      setCurrentSessionType(\"Long Break\")\r\n      setFocusNumber(focusNumber + 1)\r\n    }\r\n    else if (currentSessionType === \"Break\") {\r\n      setCurrentSessionType(\"Focus\")\r\n    }\r\n    else if (currentSessionType === \"Long Break\") {\r\n      setCurrentSessionType(\"Focus\")\r\n      setFocusNumber(0)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <p className=\"time-left\">{formattedTimeLeft}</p>\r\n      <p className=\"session-type\">{currentSessionType}</p>\r\n      <p className=\"focus-number\">{focusNumber}/{focusBeforeLong} Focus Sessions Completed</p>\r\n\r\n      <div className=\"controls\">\r\n        <div onClick={handleRestart} title=\"restart current session\">{restartButton}</div>\r\n        <div onClick={handleStartPause}>{isStarted ? pauseButton : playButton}</div>\r\n        <div onClick={handleSkip} title=\"skip to next session\">{skipButton}</div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Timer\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nfunction Break({ breakLength, setBreakLength }) {\r\n\r\n  const breakLengthInMinutes = moment.duration(breakLength, \"s\").asMinutes()\r\n\r\n  const handleChangeBreak = (e) => {\r\n    const inputBreakLengthInSeconds = moment.duration(e.target.value, \"m\").asSeconds()\r\n    setBreakLength(inputBreakLengthInSeconds)\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <label htmlFor=\"breakDuration\">break duration</label>\r\n      <input type=\"number\" id=\"breakDuration\" min=\"1\" max=\"59\" value={breakLengthInMinutes} onChange={handleChangeBreak} />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Break\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nfunction LongBreak({ longBreakLength, setLongBreakLength }) {\r\n\r\n  const longBreakLengthInMinutes = moment.duration(longBreakLength, \"s\").asMinutes()\r\n\r\n  const handleChangeLongBreak = (e) => {\r\n    const inputLongBreakLengthInSeconds = moment.duration(e.target.value, \"m\").asSeconds()\r\n    setLongBreakLength(inputLongBreakLengthInSeconds)\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <label htmlFor=\"longBreakDuration\">long break duration</label>\r\n      <input type=\"number\" id=\"longBreakDuration\" min=\"1\" value={longBreakLengthInMinutes} onChange={handleChangeLongBreak} />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default LongBreak\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nfunction Focus({ focusLength, setFocusLength }) {\r\n\r\n  const focusLengthInMinutes = moment.duration(focusLength, \"s\").asMinutes()\r\n\r\n  const handleChangeFocus = (e) => {\r\n    const inputFocusLengthInSeconds = moment.duration(e.target.value, \"m\").asSeconds()\r\n    setFocusLength(inputFocusLengthInSeconds)\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <label htmlFor=\"focusDuration\">focus duration</label>\r\n      <input type=\"number\" id=\"focusDuration\" min=\"1\" max=\"59\" value={focusLengthInMinutes} onChange={handleChangeFocus} />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Focus\r\n","import React from 'react'\r\nimport Break from './Break'\r\nimport LongBreak from './LongBreak'\r\nimport Focus from './Focus'\r\n\r\nfunction Settings({ focusLength, setFocusLength, breakLength, setBreakLength, longBreakLength, setLongBreakLength, autoStart, setAutoStart, focusBeforeLong, setFocusBeforeLong, timerInTitle, setTimerInTitle, showSettings, setShowSettings }) {\r\n\r\n  const closeButton = <ion-icon name=\"close-sharp\"></ion-icon>\r\n\r\n  const handleClose = () => {\r\n    document.getElementById(\"settings-modal\").classList.add(\"slide-out-bottom\")\r\n    setTimeout(() => {\r\n      setShowSettings(!showSettings)\r\n    }, 500)\r\n  }\r\n\r\n  const handleAutoStart = () => {\r\n    setAutoStart(!autoStart)\r\n  }\r\n\r\n  const handleFocusBeforeLong = (e) => {\r\n    setFocusBeforeLong(e.target.value)\r\n  }\r\n\r\n  const handleTimerInTitle = () => {\r\n    setTimerInTitle(!timerInTitle)\r\n  }\r\n\r\n  if (!showSettings) {\r\n    return null\r\n  }\r\n  else {\r\n    document.body.style.overflow = \"hidden\" //hide scrollbar caused by animation\r\n    return (\r\n      <section id=\"settings-modal\" className=\"modal slide-in-bottom\">\r\n        <p className=\"section-title\">Settings</p>\r\n        <div className=\"x-grid\" onClick={handleClose}>{closeButton}</div>\r\n        <div className=\"focus-grid\">\r\n          <Focus\r\n            focusLength={focusLength}\r\n            setFocusLength={setFocusLength} />\r\n        </div>\r\n        <div className=\"break-grid\">\r\n          <Break\r\n            breakLength={breakLength}\r\n            setBreakLength={setBreakLength}\r\n          />\r\n        </div>\r\n        <div className=\"long-break-grid\">\r\n          <LongBreak\r\n            longBreakLength={longBreakLength}\r\n            setLongBreakLength={setLongBreakLength}\r\n          />\r\n        </div>\r\n        <div className=\"focus-sessions-grid\">\r\n          <label htmlFor=\"focusBeforeLong\">focus sessions before long break</label>\r\n          <input type=\"number\" id=\"focusBeforeLong\" min=\"1\" max=\"100\" value={focusBeforeLong} onChange={handleFocusBeforeLong} />\r\n        </div>\r\n\r\n        <div className=\"autostart-grid\">          \r\n          <span>automatically start next session</span>          \r\n          <label htmlFor=\"autoStart\" className=\"switch\">\r\n            <input type=\"checkbox\" id=\"autoStart\" defaultChecked={autoStart} onChange={handleAutoStart} />\r\n            <span className=\"slider\"></span>\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"timer-title-grid\">\r\n          <span>show timer in title</span>\r\n          <label htmlFor=\"timerInTitle\" className=\"switch\">\r\n            <input type=\"checkbox\" id=\"timerInTitle\" defaultChecked={timerInTitle} onChange={handleTimerInTitle} />\r\n            <span className=\"slider\"></span>\r\n          </label>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Settings\r\n","import React from 'react'\r\n\r\nfunction About({ showAbout, setShowAbout }) {\r\n\r\n  const closeButton = <ion-icon name=\"close-sharp\"></ion-icon>\r\n\r\n  const handleClose = () => {\r\n    document.getElementById(\"about-modal\").classList.remove(\"slide-in-bottom\")\r\n    document.getElementById(\"about-modal\").classList.add(\"slide-out-bottom\")\r\n    setTimeout(() => {\r\n      setShowAbout(!showAbout)\r\n    }, 500)\r\n  }\r\n\r\n  if (!showAbout) {\r\n    return null\r\n  }\r\n  else {\r\n    document.body.style.overflow = \"hidden\" //hide scrollbar caused by animation\r\n    return (\r\n      <section id=\"about-modal\" className=\"modal slide-in-bottom\">        \r\n          <p className=\"section-title\">About</p>\r\n          <div className=\"x-grid-about\" onClick={handleClose}>{closeButton}</div>       \r\n        <p className=\"about-grid\">Evidence suggests that people can generally only stay focused for about 50 minutes before their minds begin to wander. Indeed, <a href=\"https://www.businessinsider.com/this-is-the-perfect-amount-of-time-to-work-each-day-2016-1\" target=\"blank\">one study</a> found that people produce higher quality work when they take breaks after about 50 minutes of focusing. The pomodoro technique (pomodoro being Italian for \"tomato\") takes this a step further by scheduling breaks before fatigue and distractability set in, typically every 25 minutes. The standard schedule is to work 25 minutes, take a 5-minute break (ideally involving getting away from your desk), and then taking a longer, 15-minute break every two hours.</p>\r\n        <br />\r\n      </section>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default About","import React, { useState, useEffect, useRef } from 'react';\nimport { HelmetProvider } from \"react-helmet-async\"\nimport moment from \"moment\"\nimport momentDurationFormatSetup from \"moment-duration-format\"\nimport Timer from './components/Timer'\nimport Settings from \"./components/Settings\"\nimport About from \"./components/About\"\nimport endFocus from \"./media/piece-of-cake.mp3\"\nimport endBreak from \"./media/goes-without-saying.mp3\"\n\nmomentDurationFormatSetup(moment)\n\nfunction App() {\n  const endFocusAudio = useRef(null)\n  const endBreakAudio = useRef(null)\n  const [breakLength, setBreakLength] = useState(300)\n  const [longBreakLength, setLongBreakLength] = useState(900)\n  const [focusLength, setFocusLength] = useState(1500)\n  const [focusNumber, setFocusNumber] = useState(0)\n  const [focusBeforeLong, setFocusBeforeLong] = useState(4)\n  const [intervalID, setIntervalID] = useState(null)\n  const [currentSessionType, setCurrentSessionType] = useState(\"Focus\")\n  const [timeLeft, setTimeLeft] = useState(focusLength)\n  const [autoStart, setAutoStart] = useState(true)\n  const [timerInTitle, setTimerInTitle] = useState(true)\n  const [showSettings, setShowSettings] = useState(false)\n  const [showAbout, setShowAbout] = useState(false)\n  const isStarted = intervalID != null\n  const formattedTimeLeft = moment.duration(timeLeft, \"s\").format(\"mm:ss\", { trim: false })\n  const aboutButton = <ion-icon name=\"help-circle-sharp\"></ion-icon>\n  const settingsButton = <ion-icon name=\"settings-sharp\"></ion-icon>\n\n\n  //listen for changes to session durations\n  useEffect(() => {\n    if (currentSessionType === \"Break\")\n      setTimeLeft(breakLength)\n  }, [currentSessionType, breakLength])\n\n  useEffect(() => {\n    if (currentSessionType === \"Long Break\")\n      setTimeLeft(longBreakLength)\n  }, [currentSessionType, longBreakLength])\n\n  useEffect(() => {\n    if (currentSessionType === \"Focus\")\n      setTimeLeft(focusLength)\n  }, [currentSessionType, focusLength])\n\n  //listen for sessions to end\n  useEffect(() => {\n    if (timeLeft === 0 && currentSessionType === \"Focus\" && focusNumber < (focusBeforeLong - 1)) {\n      endFocusAudio.current.volume = 0.1\n      endFocusAudio.current.play()\n      setCurrentSessionType(\"Break\")\n      setTimeLeft(breakLength)\n      setFocusNumber(focusNumber + 1)\n      if (!autoStart) {\n        clearInterval(intervalID)\n        setIntervalID(null)\n      }\n    }\n    else if (timeLeft === 0 && currentSessionType === \"Focus\" && focusNumber === (focusBeforeLong - 1)) {\n      endFocusAudio.current.volume = 0.1\n      endFocusAudio.current.play()\n      setCurrentSessionType(\"Long Break\")\n      setTimeLeft(breakLength)\n      setFocusNumber(focusNumber + 1)\n      if (!autoStart) {\n        clearInterval(intervalID)\n        setIntervalID(null)\n      }\n    }\n    else if (timeLeft === 0 && currentSessionType === \"Break\") {\n      endBreakAudio.current.volume = 0.1\n      endBreakAudio.current.play()\n      setCurrentSessionType(\"Focus\")\n      setTimeLeft(focusLength)\n      if (!autoStart) {\n        clearInterval(intervalID)\n        setIntervalID(null)\n      }\n    }\n    else if (timeLeft === 0 && currentSessionType === \"Long Break\") {\n      endBreakAudio.current.volume = 0.1\n      endBreakAudio.current.play()\n      setCurrentSessionType(\"Focus\")\n      setFocusNumber(0)\n      setTimeLeft(focusLength)\n      if (!autoStart) {\n        clearInterval(intervalID)\n        setIntervalID(null)\n      }\n    }\n  }, [breakLength, currentSessionType, focusLength, timeLeft, focusNumber, autoStart, intervalID, focusBeforeLong])\n\n  //start/pause button handler  \n  const handleStartPause = () => {\n    if (isStarted) {\n      clearInterval(intervalID)\n      setIntervalID(null)\n    } else {\n      const newIntervalID = setInterval(() => {\n        setTimeLeft(prevTimeLeft => {\n          const newTimeLeft = prevTimeLeft - 1\n          if (newTimeLeft >= 0) {\n            return newTimeLeft\n          }\n        })\n      }, 100) //todo change to 1000\n      setIntervalID(newIntervalID)\n    }\n  }\n\n  //modals\n  const handleSettings = () => {\n    setShowAbout(false)\n    //first time clicked, element doesn't exist\n    if (!document.getElementById(\"settings-modal\")) {\n      setShowSettings(!showSettings)\n    }\n    else {\n      //not the first time, element exists\n      document.getElementById(\"settings-modal\").classList.remove(\"slide-in-bottom\")\n      document.getElementById(\"settings-modal\").classList.add(\"slide-out-bottom\")\n      setTimeout(() => {\n        setShowSettings(!showSettings)\n      }, 500)\n    }\n  }\n\n  const handleAbout = () => {\n    setShowSettings(false)\n    //first time clicked, element doesn't exist\n    if (!document.getElementById(\"about-modal\")) {\n      setShowAbout(!showAbout)\n    }\n    else {\n      //not the first time, element exists\n      document.getElementById(\"about-modal\").classList.remove(\"slide-in-bottom\")\n      document.getElementById(\"about-modal\").classList.add(\"slide-out-bottom\")\n      setTimeout(() => {\n        setShowAbout(!showAbout)\n      }, 500)\n    }\n  }\n\n\n  //render\n  return (\n    <main className=\"App\">\n      <HelmetProvider><title>Pomodoro Timer {timerInTitle ? \" | \" + formattedTimeLeft : \"\"} </title></HelmetProvider>\n      <div className=\"app-title\"><p>Pomodoro Timer</p>\n        <div className=\"app-buttons\"> <div onClick={handleAbout}>{aboutButton}</div>\n          <div className=\"app-buttons\" onClick={handleSettings}>{settingsButton}</div></div>\n      </div>\n      <Timer\n        handleStartPause={handleStartPause}\n        timeLeft={timeLeft}\n        currentSessionType={currentSessionType}\n        setCurrentSessionType={setCurrentSessionType}\n        isStarted={isStarted}\n        focusLength={focusLength}\n        setFocusLength={setFocusLength}\n        setTimeLeft={setTimeLeft}\n        intervalID={intervalID}\n        setIntervalID={setIntervalID}\n        setBreakLength={setBreakLength}\n        breakLength={breakLength}\n        setLongBreakLength={setLongBreakLength}\n        longBreakLength={longBreakLength}\n        focusNumber={focusNumber}\n        setFocusNumber={setFocusNumber}\n        formattedTimeLeft={formattedTimeLeft}\n        focusBeforeLong={focusBeforeLong} />\n\n      <About\n        showAbout={showAbout}\n        setShowAbout={setShowAbout}\n      />\n      <Settings\n        focusLength={focusLength}\n        setFocusLength={setFocusLength}\n        breakLength={breakLength}\n        setBreakLength={setBreakLength}\n        longBreakLength={longBreakLength}\n        setLongBreakLength={setLongBreakLength}\n        autoStart={autoStart}\n        setAutoStart={setAutoStart}\n        focusBeforeLong={focusBeforeLong}\n        setFocusBeforeLong={setFocusBeforeLong}\n        timerInTitle={timerInTitle}\n        setTimerInTitle={setTimerInTitle}\n        showSettings={showSettings}\n        setShowSettings={setShowSettings}\n      />\n      <audio ref={endFocusAudio}><source src={endFocus} type=\"audio/mpeg\" /></audio>\n      <audio ref={endBreakAudio}><source src={endBreak} type=\"audio/mpeg\" /></audio>\n    </main>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}