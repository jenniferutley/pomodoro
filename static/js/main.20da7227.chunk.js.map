{"version":3,"sources":["media/piece-of-cake.mp3","media/goes-without-saying.mp3","components/Timer.js","components/Break.js","components/LongBreak.js","components/Focus.js","components/AdditionalSettings.js","components/Settings.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Timer","handleStartPause","currentSessionType","timeLeft","setCurrentSessionType","isStarted","focusLength","setFocusLength","setTimeLeft","intervalID","setIntervalID","setBreakLength","breakLength","longBreakLength","setLongBreakLength","focusNumber","setFocusNumber","formattedTimeLeft","focusBeforeLong","restartButton","name","playButton","pauseButton","skipButton","className","onClick","clearInterval","title","Break","breakLengthInMinutes","moment","duration","asMinutes","htmlFor","type","id","min","max","value","onChange","e","inputBreakLengthInSeconds","target","asSeconds","LongBreak","longBreakLengthInMinutes","inputLongBreakLengthInSeconds","Focus","focusLengthInMinutes","inputFocusLengthInSeconds","AdditionalSettings","autoStart","setAutoStart","setFocusBeforeLong","timerInTitle","setTimerInTitle","class","defaultChecked","Settings","showModal","setShowModal","closeButton","About","showAbout","setShowAbout","momentDurationFormatSetup","App","endFocusAudio","useRef","endBreakAudio","useState","format","trim","settingsButton","aboutButton","useEffect","current","volume","play","newIntervalID","setInterval","prevTimeLeft","newTimeLeft","ref","src","endFocus","endBreak","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.20da7227.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/piece-of-cake.7ad935d5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/goes-without-saying.8d94a74c.mp3\";","import React from 'react'\r\n\r\nfunction Timer({ handleStartPause, timeLeft, currentSessionType, setCurrentSessionType, isStarted, focusLength, setFocusLength, setTimeLeft, intervalID, setIntervalID, setBreakLength, breakLength, longBreakLength, setLongBreakLength, focusNumber, setFocusNumber, formattedTimeLeft, focusBeforeLong}) {\r\n\r\n    const restartButton = <ion-icon name=\"play-skip-back-sharp\"></ion-icon>\r\n    const playButton = <ion-icon name=\"play-sharp\"></ion-icon>\r\n    const pauseButton = <ion-icon name=\"pause-sharp\"></ion-icon>\r\n    const skipButton = <ion-icon name=\"play-skip-forward-sharp\"></ion-icon>\r\n\r\n    const handleRestart = () => {\r\n        clearInterval(intervalID)\r\n        setIntervalID(null)\r\n        if (currentSessionType === \"Focus\") {\r\n            setFocusLength(focusLength)\r\n            setTimeLeft(focusLength)\r\n        }\r\n        else if (currentSessionType === \"Break\") {\r\n            setBreakLength(breakLength)\r\n            setTimeLeft(breakLength)\r\n        }\r\n        else if (currentSessionType === \"Long Break\") {\r\n            setLongBreakLength(longBreakLength)\r\n            setTimeLeft(longBreakLength)\r\n        }\r\n    }\r\n\r\n    const handleSkip = () => {\r\n        clearInterval(intervalID)\r\n        setIntervalID(null)\r\n        if (currentSessionType === \"Focus\" && focusNumber < (focusBeforeLong - 1)) {\r\n            setCurrentSessionType(\"Break\")\r\n            setFocusNumber(focusNumber + 1)\r\n        }\r\n        if (currentSessionType === \"Focus\" && focusNumber === (focusBeforeLong - 1)) {\r\n            setCurrentSessionType(\"Long Break\")\r\n            setFocusNumber(focusNumber + 1)\r\n        }\r\n        else if (currentSessionType === \"Break\") {\r\n            setCurrentSessionType(\"Focus\")\r\n        }\r\n        else if (currentSessionType === \"Long Break\") {\r\n            setCurrentSessionType(\"Focus\")\r\n            setFocusNumber(0)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <h2>{currentSessionType}</h2>\r\n            <p>{focusNumber}/{focusBeforeLong} Focus Sessions Completed</p>\r\n            <h1>{formattedTimeLeft}</h1>\r\n            <div className=\"controls\">\r\n                <div onClick={handleRestart} title=\"restart current session\">{restartButton}</div>\r\n                <div onClick={handleStartPause}>{isStarted ? pauseButton : playButton}</div>\r\n                <div onClick={handleSkip} title=\"skip to next session\">{skipButton}</div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nfunction Break({ breakLength, setBreakLength }) {\r\n\r\n    const breakLengthInMinutes = moment.duration(breakLength, \"s\").asMinutes()\r\n\r\n    const handleChangeBreak = (e) => {\r\n        const inputBreakLengthInSeconds = moment.duration(e.target.value, \"m\").asSeconds()\r\n        setBreakLength(inputBreakLengthInSeconds)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <label htmlFor=\"breakDuration\">break duration:</label>\r\n            <input type=\"number\" id=\"breakDuration\" min=\"1\" max=\"59\" value={breakLengthInMinutes} onChange={handleChangeBreak} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Break\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nfunction LongBreak({ longBreakLength, setLongBreakLength }) {\r\n\r\n    const longBreakLengthInMinutes = moment.duration(longBreakLength, \"s\").asMinutes()\r\n\r\n    const handleChangeLongBreak = (e) => {\r\n        const inputLongBreakLengthInSeconds = moment.duration(e.target.value, \"m\").asSeconds()\r\n        setLongBreakLength(inputLongBreakLengthInSeconds)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <label htmlFor=\"longBreakDuration\">long break duration:</label>\r\n            <input type=\"number\" id=\"longBreakDuration\" min=\"1\" value={longBreakLengthInMinutes} onChange={handleChangeLongBreak} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default LongBreak\r\n","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nfunction Focus({ focusLength, setFocusLength }) {\r\n\r\n    const focusLengthInMinutes = moment.duration(focusLength, \"s\").asMinutes()\r\n\r\n    const handleChangeFocus = (e) => {\r\n        const inputFocusLengthInSeconds = moment.duration(e.target.value, \"m\").asSeconds()\r\n        setFocusLength(inputFocusLengthInSeconds)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <label htmlFor=\"focusDuration\">focus duration:</label>\r\n            <input type=\"number\" id=\"focusDuration\" min=\"1\" max=\"59\" value={focusLengthInMinutes} onChange={handleChangeFocus} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Focus\r\n","import React from 'react'\r\n\r\nfunction AdditionalSettings({ autoStart, setAutoStart, focusBeforeLong, setFocusBeforeLong, timerInTitle, setTimerInTitle }) {\r\n\r\n    const handleAutoStart = () => {\r\n        setAutoStart(!autoStart)\r\n    }\r\n\r\n    const handleFocusBeforeLong = (e) => {\r\n        setFocusBeforeLong(e.target.value)\r\n    }\r\n\r\n    const handleTimerInTitle = () => {\r\n        setTimerInTitle(!timerInTitle)\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <div class=\"settings\"><p></p>\r\n            <label htmlFor=\"focusBeforeLong\">number of focus sessions before long break</label>\r\n                <input type=\"number\" id=\"focusBeforeLong\" min=\"1\" max=\"100\" value={focusBeforeLong} onChange={handleFocusBeforeLong} /> \r\n            </div>\r\n            <div class=\"settings\"><p>automatically start next session</p>\r\n                <label htmlFor=\"autoStart\" class=\"switch\">\r\n                    <input type=\"checkbox\" id=\"autoStart\" defaultChecked={autoStart} onChange={handleAutoStart} />\r\n                    <span class=\"slider\"></span>\r\n                </label>\r\n            </div>\r\n            <div class=\"settings\"><p>show timer in title</p>\r\n                <label htmlFor=\"timerInTitle\"class=\"switch\">\r\n                    <input type=\"checkbox\" id=\"timerInTitle\" defaultChecked={timerInTitle} onChange={handleTimerInTitle} />\r\n                    <span class=\"slider\"></span>\r\n                </label>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AdditionalSettings\r\n","import React from 'react'\r\nimport Break from './Break'\r\nimport LongBreak from './LongBreak'\r\nimport Focus from './Focus'\r\nimport AdditionalSettings from \"./AdditionalSettings\"\r\n\r\nfunction Settings({ focusLength, setFocusLength, breakLength, setBreakLength, longBreakLength, setLongBreakLength, autoStart, setAutoStart, focusBeforeLong, setFocusBeforeLong, timerInTitle, setTimerInTitle, showModal, setShowModal }) {\r\n\r\n    const closeButton = <ion-icon name=\"close-sharp\"></ion-icon>\r\n\r\n    const handleClose = () => {\r\n        setShowModal(!showModal)\r\n    }\r\n\r\n    if (!showModal) {\r\n        return null\r\n    }\r\n    else {\r\n        return (\r\n            <section>\r\n                <div className=\"modal\">\r\n                <div onClick={handleClose}>{closeButton}</div>\r\n                <h2>Settings</h2>\r\n                <div className=\"settings\">\r\n                    <Focus\r\n                        focusLength={focusLength}\r\n                        setFocusLength={setFocusLength} />\r\n                    <Break\r\n                        breakLength={breakLength}\r\n                        setBreakLength={setBreakLength}\r\n                    />\r\n                    <LongBreak\r\n                        longBreakLength={longBreakLength}\r\n                        setLongBreakLength={setLongBreakLength}\r\n                    />\r\n                </div>\r\n                <AdditionalSettings\r\n                    autoStart={autoStart}\r\n                    setAutoStart={setAutoStart}\r\n                    focusBeforeLong={focusBeforeLong}\r\n                    setFocusBeforeLong={setFocusBeforeLong}\r\n                    timerInTitle={timerInTitle}\r\n                    setTimerInTitle={setTimerInTitle}\r\n                />\r\n                </div>\r\n                <div className=\"modal-overlay\"></div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Settings\r\n","import React from 'react'\r\n\r\nfunction About({ showAbout, setShowAbout }) {\r\n\r\n    const closeButton = <ion-icon name=\"close-sharp\"></ion-icon>\r\n\r\n    const handleClose = () => {\r\n        setShowAbout(!showAbout)\r\n    }\r\n\r\n    if (!showAbout) {\r\n        return null\r\n    }\r\n    else {\r\n        return (\r\n            <section className=\"modal\">\r\n                <div onClick={handleClose}>{closeButton}</div>\r\n                <h2>Why am I so cool?</h2>\r\n            </section>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default About","import React, { useState, useEffect, useRef } from 'react';\nimport { HelmetProvider } from \"react-helmet-async\"\nimport moment from \"moment\"\nimport momentDurationFormatSetup from \"moment-duration-format\"\nimport Timer from './components/Timer'\nimport Settings from \"./components/Settings\"\nimport About from \"./components/About\"\nimport endFocus from \"./media/piece-of-cake.mp3\"\nimport endBreak from \"./media/goes-without-saying.mp3\"\n\nmomentDurationFormatSetup(moment)\n\nfunction App() {\n  const endFocusAudio = useRef(null)\n  const endBreakAudio = useRef(null)\n  const [breakLength, setBreakLength] = useState(300)\n  const [longBreakLength, setLongBreakLength] = useState(900)\n  const [focusLength, setFocusLength] = useState(1500)\n  const [focusNumber, setFocusNumber] = useState(0)\n  const [focusBeforeLong, setFocusBeforeLong] = useState(4)\n  const [intervalID, setIntervalID] = useState(null)\n  const [currentSessionType, setCurrentSessionType] = useState(\"Focus\")\n  const [timeLeft, setTimeLeft] = useState(focusLength)\n  const [autoStart, setAutoStart] = useState(true)\n  const [timerInTitle, setTimerInTitle] = useState(true)\n  const [showModal, setShowModal] = useState(false)\n  const [showAbout, setShowAbout] = useState(false)\n  const isStarted = intervalID != null\n  const formattedTimeLeft = moment.duration(timeLeft, \"s\").format(\"mm:ss\", { trim: false })\n  const settingsButton = <ion-icon name=\"settings-sharp\"></ion-icon>\n  const aboutButton = <ion-icon name=\"help-circle-sharp\"></ion-icon>\n\n  //listen for changes to session durations\n  useEffect(() => {\n    if (currentSessionType === \"Break\")\n      setTimeLeft(breakLength)\n  }, [currentSessionType, breakLength])\n\n  useEffect(() => {\n    if (currentSessionType === \"Long Break\")\n      setTimeLeft(longBreakLength)\n  }, [currentSessionType, longBreakLength])\n\n  useEffect(() => {\n    if (currentSessionType === \"Focus\")\n      setTimeLeft(focusLength)\n  }, [currentSessionType, focusLength])\n\n  //listen for sessions to end\n  useEffect(() => {\n    if (timeLeft === 0 && currentSessionType === \"Focus\" && focusNumber < (focusBeforeLong - 1)) {\n      endFocusAudio.current.volume = 0.1\n      endFocusAudio.current.play()\n      setCurrentSessionType(\"Break\")\n      setTimeLeft(breakLength)\n      setFocusNumber(focusNumber + 1)\n      if (!autoStart) {\n        clearInterval(intervalID)\n        setIntervalID(null)\n      }\n    }\n    else if (timeLeft === 0 && currentSessionType === \"Focus\" && focusNumber === (focusBeforeLong - 1)) {\n      endFocusAudio.current.volume = 0.1\n      endFocusAudio.current.play()\n      setCurrentSessionType(\"Long Break\")\n      setTimeLeft(breakLength)\n      setFocusNumber(focusNumber + 1)\n      if (!autoStart) {\n        clearInterval(intervalID)\n        setIntervalID(null)\n      }\n    }\n    else if (timeLeft === 0 && currentSessionType === \"Break\") {\n      endBreakAudio.current.volume = 0.1\n      endBreakAudio.current.play()\n      setCurrentSessionType(\"Focus\")\n      setTimeLeft(focusLength)\n      if (!autoStart) {\n        clearInterval(intervalID)\n        setIntervalID(null)\n      }\n    }\n    else if (timeLeft === 0 && currentSessionType === \"Long Break\") {\n      endBreakAudio.current.volume = 0.1\n      endBreakAudio.current.play()\n      setCurrentSessionType(\"Focus\")\n      setFocusNumber(0)\n      setTimeLeft(focusLength)\n      if (!autoStart) {\n        clearInterval(intervalID)\n        setIntervalID(null)\n      }\n    }\n  }, [breakLength, currentSessionType, focusLength, timeLeft, focusNumber, autoStart, intervalID, focusBeforeLong])\n\n  //start/pause button handler  \n  const handleStartPause = () => {\n    if (isStarted) {\n      clearInterval(intervalID)\n      setIntervalID(null)\n    } else {\n      const newIntervalID = setInterval(() => {\n        setTimeLeft(prevTimeLeft => {\n          const newTimeLeft = prevTimeLeft - 1\n          if (newTimeLeft >= 0) {\n            return newTimeLeft\n          }\n        })\n      }, 100) //todo change to 1000\n      setIntervalID(newIntervalID)\n    }\n  }\n\n  //modals\n  const handleSettings = () => {\n    setShowModal(!showModal)\n  }\n\n  const handleAbout = () => {\n    setShowAbout(!showAbout)\n  }\n\n\n  //render\n  return (\n    <main className=\"App\">\n      <HelmetProvider><title>Pomodoro Timer {timerInTitle ? \" | \" + formattedTimeLeft : \"\"} </title></HelmetProvider>\n      <h2>Pomodoro Timer</h2>\n      <Timer\n        handleStartPause={handleStartPause}\n        timeLeft={timeLeft}\n        currentSessionType={currentSessionType}\n        setCurrentSessionType={setCurrentSessionType}\n        isStarted={isStarted}\n        focusLength={focusLength}\n        setFocusLength={setFocusLength}\n        setTimeLeft={setTimeLeft}\n        intervalID={intervalID}\n        setIntervalID={setIntervalID}\n        setBreakLength={setBreakLength}\n        breakLength={breakLength}\n        setLongBreakLength={setLongBreakLength}\n        longBreakLength={longBreakLength}\n        focusNumber={focusNumber}\n        setFocusNumber={setFocusNumber}\n        formattedTimeLeft={formattedTimeLeft}\n        focusBeforeLong={focusBeforeLong} />\n      <div onClick={handleAbout}>{aboutButton}</div>\n      <div onClick={handleSettings}>{settingsButton}</div>\n      <About\n        showAbout={showAbout}\n        setShowAbout={setShowAbout}\n      />\n      <Settings\n        focusLength={focusLength}\n        setFocusLength={setFocusLength}\n        breakLength={breakLength}\n        setBreakLength={setBreakLength}\n        longBreakLength={longBreakLength}\n        setLongBreakLength={setLongBreakLength}\n        autoStart={autoStart}\n        setAutoStart={setAutoStart}\n        focusBeforeLong={focusBeforeLong}\n        setFocusBeforeLong={setFocusBeforeLong}\n        timerInTitle={timerInTitle}\n        setTimerInTitle={setTimerInTitle}\n        showModal={showModal}\n        setShowModal={setShowModal}\n      />\n      <audio ref={endFocusAudio}><source src={endFocus} type=\"audio/mpeg\" /></audio>\n      <audio ref={endBreakAudio}><source src={endBreak} type=\"audio/mpeg\" /></audio>\n    </main>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}